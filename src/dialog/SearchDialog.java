package dialog;

import frame.MyFrame;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

public class SearchDialog extends JDialog {


    /**
     * Creates new form NewJDialog
     */
    public SearchDialog(
    ) {
        initUi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initUi() {

        label = new JLabel();
        label.setText("查找内容(N):");
        label.setSize(80, 25);

        searchField = new JTextField();
        searchField.setSize(125, 25);

        searchButt = new JButton();
        searchButt.setSize(125, 25);
        searchButt.setText("查找下一个(F)");
        searchButt.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                findNxitPerformed(evt);
            }
        });

        checkBox = new JCheckBox();
        checkBox.setText("区分大小写(C)");
        checkBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                isMatchCase(evt);
            }
        });

        panel = new JPanel();
        panel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "方向"));
        upButt = new JRadioButton();
        downButt = new JRadioButton();
        ButtonGroup btnGroup = new ButtonGroup();
        btnGroup.add(upButt);
        btnGroup.add(downButt);
        downButt.setSelected(true);
        upButt.setText("向上");
        downButt.setText("向下");
        downButt.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                searchUpOrDown(e);
            }
        });

        upButt.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                searchUpOrDown(e);
            }
        });

        // 方向面板设置布局
        GroupLayout pLayout = new GroupLayout(panel);
        panel.setLayout(pLayout);

        // 水平方向
        pLayout.setHorizontalGroup(
                pLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                       .addGroup(pLayout.createSequentialGroup()
                                        .addComponent(upButt)
                                        .addComponent(downButt)
                                        .addGap(0, 0, 0))
        );
        // 垂直方向
        pLayout.setVerticalGroup(
                pLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                       .addGroup(pLayout.createSequentialGroup()
                                        .addGroup(pLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                         .addComponent(upButt)
                                                         .addComponent(downButt))
                                        .addGap(0, 0, 0))
        );

        cancelButt = new JButton();
        cancelButt.setSize(125, 25);
        cancelButt.setText("取消");
        cancelButt.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cancel(e);
            }
        });

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);


        // dialog设置布局
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        // 水平布局
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                      .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(label)
                                                                      .addComponent(searchField))
                                                      .addGroup(layout.createSequentialGroup()
                                                                      .addComponent(checkBox)
                                                                      .addComponent(panel)))
                                      .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)
                                                      .addComponent(searchButt, 125, 125, 125)
                                                      .addComponent(cancelButt, 125, 125, 125))
                                      .addContainerGap()
                      )
        );
        // 垂直布局
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                                      .addContainerGap()
                                      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                      .addComponent(label)
                                                      .addComponent(searchField)
                                                      .addComponent(searchButt))
                                      .addGap(18, 18, 18)
                                      .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                      .addComponent(checkBox)
                                                      .addComponent(panel)
                                                      .addComponent(cancelButt))
                                      .addContainerGap())
        );

        pack();
    }

    private void findNxitPerformed(ActionEvent evt) {
        // TODO add your handling code here:
        final JEditorPane editor = MyFrame.getMainFrame().getEditorPane();
        String content = editor.getText();
        String matchStr= searchField.getText();

        if (isMatch) {

        }


        if (!content.contains(matchStr)) {

        }

        if (isDown) {

        }

    }

    /**
     * 设置是否区分大小
     *
     * @param evt
     *         ActionEven
     */
    private void isMatchCase(ActionEvent evt) {
        if (checkBox.isSelected()) {
            isMatch = true;
            System.out.println("isMatch: " + isMatch);
        } else {
            isMatch = false;
            System.out.println("isMatch: " + isMatch);
        }
    }

    /**
     * 设置查找方向
     *
     * @param evt
     *         ItemEven
     */
    private void searchUpOrDown(ItemEvent evt) {
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (evt.getSource() == upButt) {
                isDown = false;
            } else {
                isDown = true;
            }
        }
    }

    /**
     * 取消查找，关闭dialog
     *
     * @param evt
     *         事件
     */
    private void cancel(ActionEvent evt) {
        dispose();
    }

    private boolean isDown = true;
    private boolean isMatch = false;

    /**
     * @param args
     *         the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchDialog dialog = new SearchDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private JButton searchButt;
    private JButton cancelButt;
    private JCheckBox checkBox;
    private JLabel label;
    private JPanel panel;
    private JRadioButton upButt;
    private JRadioButton downButt;
    private JTextField searchField;
}
